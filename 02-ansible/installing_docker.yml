- name: installing docker and deploy 3 apps
  hosts: localhost
  become: yes

  tasks:
  - name: Uninstall old versions
    apt:
      name: "{{ item }}"
      state: absent
    loop:
      - docker.io
      - docker-compose
      - docker-compose-v2
      - docker-doc
      - podman-docker 

  - name: Install prerequisites
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      state: present

  - name: Add Docker's official GPG key
    become: yes
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      keyring: /etc/apt/keyrings/docker.asc
      state: present
    
  - name:  Add the repository to Apt sources
    become: yes
    apt_repository:
      repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present
      update_cache: yes

  - name: Install the Docker packages
    apt: 
      name: "{{ item }}"
      state: latest
    loop:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io 
      - docker-buildx-plugin 
      - docker-compose-plugin

  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes

  - name: login to docker regisrtry
    community.docker.docker_login:
      username: avdeevaml
      password: exemple-token
      reauthorize: yes  
      state: present

  - name: pull a docker image
    community.docker.docker_image:
      name: avdeevaml/cloud:v1
      source: pull
  
  - name: deploy container_1
    community.docker.docker_container:
      name: my_app_1
      image: avdeevaml/cloud:v1
      state: started
      ports: 
        - 8001:8000
      env:
        AUTHOR_NAME: "avdeevaml exeml1"
    
  - name: deploy container_2
    community.docker.docker_container:
      name: my_app_2
      image: avdeevaml/cloud:v1
      state: started
      ports: 
        - 8002:8000
      env:
        AUTHOR_NAME: "avdeevaml exempl2"

  - name: deploy container_3
    community.docker.docker_container:
      name: my_app_3
      image: avdeevaml/cloud:v1
      state: started
      ports: 
        - 8003:8000
      env:
        AUTHOR_NAME: "avdeevaml exempl3"

  - name: Check nginx is installed
    apt:
      name: nginx
      state: present
  
  - name: Create nginx.conf
    template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      mode: '0644'
    notify: restart nginx

  - name: Enable and start nginx
    service:
      name: nginx
      state: started
      enabled: yes

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted


